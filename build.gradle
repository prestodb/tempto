/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.github.hierynomus.license" version "0.11.0"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'

plugins.withType(JavaPlugin) {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

ext.versions = [
        assertj      : '2.0.0',
        guava        : '18.0',
        guice        : '4.0',
        log4j        : '1.2.17',
        testng       : '6.10',
        junit        : '4.12',
        spock        : '1.0-groovy-2.4',
        slf4j        : '1.7.12',
        hsqldb       : '2.3.2',
        dbutils      : '1.6',
        snakeyaml    : '1.15',
        cglib        : '3.1',
        httpclient   : '4.4',
        ioutils      : '2.4',
        tpchgen      : '0.6',
        tpcdsgen     : '1.2',
        commons_lang3: '3.3.2',
        commons_dbcp2: '2.1',
        hive_jdbc    : '0.13.1-5',
        hive         : '1.2.0-2',
        presto       : '0.181',
        reflections  : '0.9.9',
        bytebuddy    : '0.7-rc2',
        jsch         : '0.1.52',
        mina_sshd    : '0.14.0',
        freemarker   : '2.3.22',
        objenesis    : '1.4',
        jackson      : '2.4.4',
        cassandra    : '3.0.0',
        commons_cli  : '1.3.1',
        thrift       : '0.9.1',
]

ext.libraries = [
        assertj              : "org.assertj:assertj-core:${versions.assertj}",
        guava                : "com.google.guava:guava:${versions.guava}",
        guice                : ["com.google.inject:guice:${versions.guice}",
                                "com.google.inject.extensions:guice-multibindings:${versions.guice}"],
        log4j                : "log4j:log4j:${versions.log4j}",
        testng               : "org.testng:testng:${versions.testng}",
        junit                : "junit:junit:${versions.junit}", /* TODO: remove junit dependencies */
        commons_lang3        : "org.apache.commons:commons-lang3:${versions.commons_lang3}",
        commons_dbcp2        : "org.apache.commons:commons-dbcp2:${versions.commons_dbcp2}",
        spock                : ["org.spockframework:spock-core:${versions.spock}",
                                "cglib:cglib:${versions.cglib}"],
        httpclient           : "org.apache.httpcomponents:httpclient:${versions.httpclient}",
        ioutils              : "commons-io:commons-io:${versions.ioutils}",
        hsqldb               : "org.hsqldb:hsqldb:${versions.hsqldb}",
        dbutils              : "commons-dbutils:commons-dbutils:${versions.dbutils}",
        slf4j_api            : "org.slf4j:slf4j-api:${versions.slf4j}",
        slf4j_log4j          : "org.slf4j:slf4j-log4j12:${versions.slf4j}",
        slf4j_jdk14          : "org.slf4j:slf4j-jdk14:${versions.slf4j}",
        jcl_over_slf4j       : "org.slf4j:jcl-over-slf4j:${versions.slf4j}",
        snakeyaml            : "org.yaml:snakeyaml:${versions.snakeyaml}",
        tpchgen              : "io.airlift.tpch:tpch:${versions.tpchgen}",
        tpcdsgen             : "com.teradata.tpcds:tpcds:${versions.tpcdsgen}",
        hive_jdbc            : "com.facebook.presto.hive:hive-apache-jdbc:${versions.hive_jdbc}",
        hive                 : "com.facebook.presto.hive:hive-apache:${versions.hive}",
        presto_jdbc          : "com.facebook.presto:presto-jdbc:${versions.presto}",
        reflections          : "org.reflections:reflections:${versions.reflections}",
        bytebuddy            : "net.bytebuddy:byte-buddy:${versions.bytebuddy}",
        jsch                 : "com.jcraft:jsch:${versions.jsch}",
        mina_sshd            : "org.apache.sshd:apache-sshd:${versions.mina_sshd}",
        postgresql_jdbc      : "org.postgresql:postgresql:9.4-1201-jdbc41",
        commons_cli          : "commons-cli:commons-cli:1.2",
        freemarker           : "org.freemarker:freemarker:${versions.freemarker}",
        joda                 : "joda-time:joda-time:2.4",
        objenesis            : "org.objenesis:objenesis:${versions.objenesis}",
        jackson_databind     : "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}",
        jackson_datatype_jdk8: "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${versions.jackson}",
        cassandra_driver     : "com.datastax.cassandra:cassandra-driver-core:${versions.cassandra}",
        commons_cli          : "commons-cli:commons-cli:${versions.commons_cli}",
        thrift               : "org.apache.thrift:libthrift:${versions.thrift}",
]

ext.tempto_core = project(':tempto-core')
ext.tempto_logging_log4j = project(':tempto-logging-log4j')
ext.tempto_examples = project(':tempto-examples')
ext.tempto_runner = project(':tempto-runner')
ext.tempto_ldap = project(':tempto-ldap')
ext.expected_result_generator = project(':expected-result-generator')
ext.tempto_version = '1.41-SNAPSHOT'
ext.tempto_group = "com.teradata.tempto"
ext.isReleaseVersion = !tempto_version.endsWith("SNAPSHOT")

ext.nexusUsername = 'setup_nexusUsername_in_gradle.properties'
ext.nexusPassword = 'setup_nexusPassword_in_gradle.properties'
ext.skipSigning = false

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

subprojects {
    // project information
    version = tempto_version
    group = tempto_group

    repositories {
        mavenCentral()
        mavenLocal()
    }
    apply plugin: 'license'
    license {
        header rootProject.file('apache_license_header.txt')
        exclude '**/*.json'
    }
}

configure(subprojects - expected_result_generator - tempto_examples) {
    apply plugin: 'signing'
    apply plugin: 'java'
    apply plugin: 'maven'

    // plugins configuration
    javadoc {
        failOnError = true
    }

    // javadoc.jar generation
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    // sources.jar generation
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }

    signing {
        required { isReleaseVersion && !skipSigning }
        sign configurations.archives
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    // publishing to sonatype
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                pom.project {
                    packaging 'jar'
                    description 'Tempto - test framework'
                    url 'https://github.com/prestodb/tempto'
                    scm {
                        url 'git@github.com:prestodb/tempto.git'
                        connection 'scm:git:git@github.com:prestodb/tempto.git'
                        developerConnection 'scm:git:git@github.com:prestodb/tempto.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'thc'
                            name 'Teradata Hadoop Center'
                            email 'EB230060 aat teradata doot com'
                        }
                    }
                }
            }
        }
    }
}

