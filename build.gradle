/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.github.hierynomus.license" version "0.16.1"
    id 'signing'
    id 'maven-publish'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

ext.versions = [
        assertj      : '2.0.0',
        guava        : '21.0',
        guice        : '4.0',
        log4j        : '1.2.17',
        testng       : '7.5',
        junit        : '4.12',
        spock        : '2.3-groovy-4.0',
        slf4j        : '1.7.12',
        hsqldb       : '2.3.2',
        dbutils      : '1.6',
        snakeyaml    : '1.15',
        cglib        : '3.1',
        httpclient   : '4.4',
        ioutils      : '2.4',
        tpchgen      : '0.6',
        tpcdsgen     : '1.2',
        commons_lang3: '3.3.2',
        commons_dbcp2: '2.1',
        hive_jdbc    : '0.13.1-5',
        hive         : '3.0.0-2',
        presto       : '0.181',
        reflections  : '0.9.9',
        bytebuddy    : '1.15.4',
        jsch         : '0.1.55',
        mina_sshd    : '0.14.0',
        freemarker   : '2.3.22',
        objenesis    : '1.4',
        jackson      : '2.4.4',
        cassandra    : '3.4.0',
        commons_cli  : '1.3.1',
        thrift       : '0.9.3',
        kafka        : '3.9.0',
]

ext.libraries = [
        assertj              : "org.assertj:assertj-core:${versions.assertj}",
        guava                : "com.google.guava:guava:${versions.guava}",
        guice                : ["com.google.inject:guice:${versions.guice}",
                                "com.google.inject.extensions:guice-multibindings:${versions.guice}"],
        log4j                : "log4j:log4j:${versions.log4j}",
        testng               : "org.testng:testng:${versions.testng}",
        junit                : "junit:junit:${versions.junit}", /* TODO: remove junit dependencies */
        commons_lang3        : "org.apache.commons:commons-lang3:${versions.commons_lang3}",
        commons_dbcp2        : "org.apache.commons:commons-dbcp2:${versions.commons_dbcp2}",
        spock                : ["org.spockframework:spock-core:${versions.spock}",
                                "cglib:cglib:${versions.cglib}"],
        httpclient           : "org.apache.httpcomponents:httpclient:${versions.httpclient}",
        ioutils              : "commons-io:commons-io:${versions.ioutils}",
        hsqldb               : "org.hsqldb:hsqldb:${versions.hsqldb}",
        dbutils              : "commons-dbutils:commons-dbutils:${versions.dbutils}",
        slf4j_api            : "org.slf4j:slf4j-api:${versions.slf4j}",
        slf4j_log4j          : "org.slf4j:slf4j-log4j12:${versions.slf4j}",
        slf4j_jdk14          : "org.slf4j:slf4j-jdk14:${versions.slf4j}",
        jcl_over_slf4j       : "org.slf4j:jcl-over-slf4j:${versions.slf4j}",
        snakeyaml            : "org.yaml:snakeyaml:${versions.snakeyaml}",
        tpchgen              : "io.airlift.tpch:tpch:${versions.tpchgen}",
        tpcdsgen             : "com.teradata.tpcds:tpcds:${versions.tpcdsgen}",
        hive_jdbc            : "com.facebook.presto.hive:hive-apache-jdbc:${versions.hive_jdbc}",
        hive                 : "com.facebook.presto.hive:hive-apache:${versions.hive}",
        presto_jdbc          : "com.facebook.presto:presto-jdbc:${versions.presto}",
        reflections          : "org.reflections:reflections:${versions.reflections}",
        bytebuddy            : "net.bytebuddy:byte-buddy:${versions.bytebuddy}",
        jsch                 : "com.jcraft:jsch:${versions.jsch}",
        mina_sshd            : "org.apache.sshd:apache-sshd:${versions.mina_sshd}",
        postgresql_jdbc      : "org.postgresql:postgresql:9.4-1201-jdbc41",
        commons_cli          : "commons-cli:commons-cli:1.2",
        freemarker           : "org.freemarker:freemarker:${versions.freemarker}",
        joda                 : "joda-time:joda-time:2.4",
        objenesis            : "org.objenesis:objenesis:${versions.objenesis}",
        jackson_databind     : "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}",
        jackson_datatype_jdk8: "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${versions.jackson}",
        cassandra_driver     : "com.datastax.cassandra:cassandra-driver-core:${versions.cassandra}",
        commons_cli          : "commons-cli:commons-cli:${versions.commons_cli}",
        thrift               : "org.apache.thrift:libthrift:${versions.thrift}",
        kafka_clients        : "org.apache.kafka:kafka-clients:${versions.kafka}",
        kafka                : "org.apache.kafka:kafka_2.12:${versions.kafka}",
]

ext.tempto_core = project(':tempto-core')
ext.tempto_logging_log4j = project(':tempto-logging-log4j')
ext.tempto_examples = project(':tempto-examples')
ext.tempto_runner = project(':tempto-runner')
ext.tempto_ldap = project(':tempto-ldap')
ext.tempto_kafka = project(':tempto-kafka')
ext.expected_result_generator = project(':expected-result-generator')
ext.tempto_version = '1.54-SNAPSHOT'
ext.tempto_group = "io.prestodb.tempto"
ext.isReleaseVersion = !tempto_version.endsWith("SNAPSHOT")

ext.nexusUsername = 'setup_nexusUsername_in_gradle.properties'
ext.nexusPassword = 'setup_nexusPassword_in_gradle.properties'
ext.skipSigning = false


subprojects {
    // project information
    version = tempto_version
    group = tempto_group

    repositories {
        mavenCentral()
        mavenLocal()
    }
    apply plugin: 'license'
    license {
        header rootProject.file('apache_license_header.txt')
        exclude '**/*.json'
    }
}

configure(subprojects - expected_result_generator - tempto_examples) {
    apply plugin: 'signing'
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    // plugins configuration
    javadoc {
        failOnError = true
    }

   // javadoc.jar generation
    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from(javadoc)
    }


    // sources.jar generation
    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from(sourceSets.main.allJava)
    }

    signing {
        required { isReleaseVersion && !skipSigning }
        sign configurations.archives
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    // publishing to sonatype

    publishing {
        publications {
            maven(MavenPublication) {
                group tempto_group
                version tempto_version

                from components.java

                pom {
                    packaging = 'jar'
                    description = 'Tempto - test framework'
                    url = 'https://github.com/prestodb/tempto'
                }
            }
        }

        repositories {
            maven {
                url = uri('https://oss.sonatype.org/service/local/staging/deploy/maven2/')
                credentials {
                    username = System.getenv('NEXUS_USERNAME')
                    password = System.getenv('NEXUS_PASSWORD')
                }
            }
        }
    }
}

